<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.FatShark.dao.UserDao">

    <resultMap id="BaseResultMap" type="user">
        <!--@Table user-->
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="shopID" column="shopID" jdbcType="INTEGER"/>
        <result property="time" column="time" jdbcType="TIMESTAMP"/>
        <result property="level" column="level" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <association property="levelName" column="level" javaType="LevelName">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="level" column="level" jdbcType="INTEGER"/>
            <result property="name" column="Name" jdbcType="VARCHAR"/>
        </association>
        <association property="sex" column="gender" javaType="Sex">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="gender" column="gender" jdbcType="INTEGER"/>
            <result property="sexName" column="sexName" jdbcType="VARCHAR"/>
        </association>
        <association property="shop" column="shopID" javaType="shop">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="shopAddress" column="shopAddress" jdbcType="VARCHAR"/>
            <result property="shopID" column="shopID" jdbcType="INTEGER"/>
            <result property="shopName" column="shopName" jdbcType="VARCHAR"/>
            <result property="shopProjectID" column="shopProjectID" jdbcType="INTEGER"/>
            <collection property="project" column="projectID" ofType="project">
                <id property="id" column="id" jdbcType="INTEGER"/>
                <result property="projectName" column="projectName" jdbcType="VARCHAR"/>
                <result property="projectKind" column="projectKind" jdbcType="VARCHAR"/>
                <result property="projectPrice" column="projectPrice"/>
                <result property="projectInfo" column="projectInfo" jdbcType="VARCHAR"/>
                <result property="projectID" column="projectID" jdbcType="INTEGER"/>
            </collection>
        </association>
    </resultMap>
    <select id="queryUserByID" resultMap="BaseResultMap">
        select user.id, username, password, phone, address, Name, time, SexName, email,user.level,shopID
        from user,
            levelname,
            sex
        where user.id = #{id}
          and user.level = levelname.level
          and user.gender = sex.gender
    </select>

    <!--查询单个(phone)-->
    <select id="queryByNameOrPhone" resultMap="BaseResultMap">
        select user.id, username, password, phone, address, Name, time, SexName, email
        from user,
            levelname,
            sex
        where phone = #{phone}
          and user.level = levelname.level
          and user.gender = sex.gender
           or username = #{username}
          and user.level = levelname.level
          and user.gender = sex.gender
    </select>


    <!--连表查询所有用户信息-->
    <select id="queryAllUserInfo" resultMap="BaseResultMap">
        select user.id, username, password, phone, address, Name, time, SexName, email
        from user,
            levelname,
            sex
        where user.level = levelname.level
          and user.gender = sex.gender
    </select>


    <select id="queryByIDAndPassword" resultMap="BaseResultMap">
        select user.id, username, password, phone, address, Name, time, SexName, email
        from user,
            levelname,
            sex
        where user.id = #{arg0}
          and user.password=#{arg1}
          and user.level = levelname.level
          and user.gender = sex.gender
    </select>


    <!--分页查询数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select user.id, username, password, phone, address, Name, time, SexName, email
        from user,
            levelname,
            sex
        where user.level = levelname.level
          and user.gender = sex.gender limit #{offset}
            , #{limit}
    </select>

    <!--新增所有列-->
    <insert id="addUser" parameterType="voUser">
        insert into user(username, password, phone, address, shopID, level, time, gender, email)
        values (#{username}, #{password}, #{phone}, #{address}, null, 3, #{time}, #{gender}, #{email});
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        set user.username=#{username},
            user.phone=#{phone},
            user.level=#{level},
            user.address=#{address},
            user.gender=#{gender},
            user.email=#{email}
        where user.id = #{id}
    </update>

    <update id="updatePassword">
        update user
        set user.password=#{arg1}
        where user.id =#{arg0}
    </update>


    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from mystore.user
        where user.id = #{id}
    </delete>

    <select id="queryByNameAndPassword" resultType="user">
        select *
        from mystore.user
        where username = #{username}
          and password = #{password}
          and level = #{level}
    </select>
</mapper>