<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.FatShark.dao.OrderDao">

    <resultMap id="BaseResultMap" type="com.FatShark.entity.Order">
        <!--@Table order-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orderID" column="orderID" jdbcType="INTEGER"/>
        <result property="orderTime" column="orderTime" jdbcType="TIMESTAMP"/>
        <result property="pay" column="pay" jdbcType="INTEGER"/>
        <result property="send" column="send" jdbcType="INTEGER"/>
        <result property="orderPr" column="orderPr" jdbcType="INTEGER"/>
        <collection property="user" column="orderID" ofType="user">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
            <result property="shopID" column="shopID" jdbcType="INTEGER"/>
            <result property="time" column="time" jdbcType="TIMESTAMP"/>
            <result property="level" column="level" jdbcType="VARCHAR"/>
            <result property="gender" column="gender" jdbcType="INTEGER"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
        </collection>
        <collection property="project" column="orderPr" ofType="project">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="projectName" column="projectName" jdbcType="VARCHAR"/>
            <result property="projectKind" column="projectKind" jdbcType="VARCHAR"/>
            <result property="projectPrice" column="projectPrice" javaType="double"/>
            <result property="projectInfo" column="projectInfo" jdbcType="VARCHAR"/>
            <result property="projectID" column="projectID" jdbcType="INTEGER"/>
        </collection>
    </resultMap>
    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select `order`.id,
               `order`.orderID,
               `order`.orderTime,
               `order`.pay,
               `order`.send,
               `order`.orderPr,
               project.id,
               project.projectName,
               project.projectKind,
               project.projectPrice,
               project.projectInfo,
               project.projectID,
               user.id,
               user.username,
               user.password,
               user.phone,
               user.address,
               user.shopID,
               user.level,
               user.time,
               user.gender,
               user.email,
               user.img
        from `order`
                 left join user on user.id = `order`.orderID
                 left join project on `order`.orderPr = project.id
        where user.id = #{id}

    </select>

    <select id="queryByUserID" resultMap="BaseResultMap">
        select `order`.id,
               `order`.orderID,
               `order`.orderTime,
               `order`.pay,
               `order`.send,
               `order`.orderPr,
               project.id,
               project.projectName,
               project.projectKind,
               project.projectPrice,
               project.projectInfo,
               project.projectID,
               user.id,
               user.username,
               user.password,
               user.phone,
               user.address,
               user.shopID,
               user.level,
               user.time,
               user.gender,
               user.email,
               user.img
        from `order`
                 left join user on user.id = `order`.orderID
                 left join project on `order`.orderPr = project.id
        where `order`.orderID = #{arg0} limit #{arg1}
            , #{arg2}
    </select>


    <select id="queryAll" resultMap="BaseResultMap">
        select `order`.id,
               `order`.orderID,
               `order`.orderTime,
               `order`.pay,
               `order`.send,
               `order`.orderPr,
               project.id,
               project.projectName,
               project.projectKind,
               project.projectPrice,
               project.projectInfo,
               project.projectID,
               user.id,
               user.username,
               user.password,
               user.phone,
               user.address,
               user.shopID,
               user.level,
               user.time,
               user.gender,
               user.email,
               user.img
        from `order`
                 left join user on user.id = `order`.orderID
                 left join project on `order`.orderPr = project.id
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select `order`.id,
               `order`.orderID,
               `order`.orderTime,
               `order`.pay,
               `order`.send,
               `order`.orderPr,
               project.id,
               project.projectName,
               project.projectKind,
               project.projectPrice,
               project.projectInfo,
               project.projectID,
               user.id,
               user.username,
               user.password,
               user.phone,
               user.address,
               user.shopID,
               user.level,
               user.time,
               user.gender,
               user.email,
               user.img
        from `order`
                 left join user on user.id = `order`.orderID
                 left join project on `order`.orderPr = project.id
            limit #{offset}
           , #{limit}
    </select>

    <!--通过收货人姓名作为筛选条件查询-->
    <select id="queryByUsername" resultMap="BaseResultMap">
        select `order`.id,
               `order`.orderID,
               `order`.orderTime,
               `order`.pay,
               `order`.send,
               `order`.orderPr,
               project.id,
               project.projectName,
               project.projectKind,
               project.projectPrice,
               project.projectInfo,
               project.projectID,
               user.id,
               user.username,
               user.password,
               user.phone,
               user.address,
               user.shopID,
               user.level,
               user.time,
               user.gender,
               user.email,
               user.img
        from `order`
                 left join user on user.id = `order`.orderID
                 left join project on `order`.orderPr = project.id
            and user.username = #{username}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into `order`(id, orderID, orderTime, pay, send, orderPr)
        values (null, #{orderID}, #{orderTime}, #{pay}, #{send}, #{orderPr})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update `order`
        set pay=#{pay},
            send=#{send}
        where `order`.id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from `order`
        where `order`.id = #{id}
    </delete>

</mapper>