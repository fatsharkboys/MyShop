<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.FatShark.dao.ShopDao">

    <resultMap id="BaseResultMap" type="shop">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="shopID" column="shopID" jdbcType="INTEGER"/>
        <result property="shopName" column="shopName" jdbcType="VARCHAR"/>
        <result property="shopAddress" column="shopAddress" jdbcType="VARCHAR"/>
        <result property="shopProjectID" column="shopProjectID" jdbcType="INTEGER"/>
        <association property="user" column="shopID" javaType="user">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
            <result property="shopID" column="shopID" jdbcType="INTEGER"/>
            <result property="time" column="time" jdbcType="TIMESTAMP"/>
            <result property="level" column="level" jdbcType="VARCHAR"/>
            <result property="gender" column="gender" jdbcType="INTEGER"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
        </association>
        <collection property="project" column="projectID" ofType="project">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="projectName" column="projectName" jdbcType="VARCHAR"/>
            <result property="projectKind" column="projectKind" jdbcType="VARCHAR"/>
            <result property="projectPrice" column="projectPrice" javaType="double"/>
            <result property="projectInfo" column="projectInfo" jdbcType="VARCHAR"/>
            <result property="projectID" column="projectID" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <!--查询本店所有货物信息-->
    <select id="queryAllProjectInfo" resultMap="BaseResultMap">
        select projectName, projectKind, projectPrice, projectInfo
        from shop,
             project
        where shopProjectID = projectID
    </select>

    <select id="queryShopInfo" resultMap="BaseResultMap">
        select shop.id, shop.shopID, username, gender, shopName, shopAddress
        from shop,
             user
        where shop.shopID = user.shopID
    </select>

    <select id="queryShopInfoByShopID" resultMap="BaseResultMap">
        select shop.id, shop.shopID, username, gender, shopName, shopAddress, shopProjectID
        from shop,
             user
        where shop.shopID = user.shopID
          and shop.shopID = #{id}
    </select>
    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select shop.id, shop.shopID, username, gender, shopName, shopAddress
        from shop,
             user
        where shop.shopID = user.shopID limit #{offset}
            , #{limit}
    </select>

    <!--根据shopID查询店铺-->
    <select id="queryShopInfoByID" resultType="com.FatShark.entity.Shop">
        select *
        from shop
        where id = #{id}
    </select>


    <select id="queryShopInfoByName" resultMap="BaseResultMap">
        select shop.shopID, username, gender, shopName, shopAddress
        from shop,
             user
        where shopName = #{shopName}
          and shop.shopID = user.shopID
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into mystore.shop(id, shopID, shopName, shopAddress, shopProjectID)
        values (null, 10, #{shopName}, #{shopAddress}, #{shopProjectID})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mystore.shop
        set shopName=#{shopName},
            shopAddress=#{shopAddress}
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from mystore.shop
        where id = #{id}
    </delete>

</mapper>